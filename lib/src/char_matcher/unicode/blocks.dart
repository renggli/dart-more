// AUTO-GENERATED CODE: DO NOT EDIT

// https://www.unicode.org/Public/17.0.0/ucd/Blocks.txt

import '../basic/range.dart';

const basicLatin = RangeCharMatcher(0x0000, 0x007f);
const latin1Supplement = RangeCharMatcher(0x0080, 0x00ff);
const latinExtendedA = RangeCharMatcher(0x0100, 0x017f);
const latinExtendedB = RangeCharMatcher(0x0180, 0x024f);
const ipaExtensions = RangeCharMatcher(0x0250, 0x02af);
const spacingModifierLetters = RangeCharMatcher(0x02b0, 0x02ff);
const combiningDiacriticalMarks = RangeCharMatcher(0x0300, 0x036f);
const greekAndCoptic = RangeCharMatcher(0x0370, 0x03ff);
const cyrillic = RangeCharMatcher(0x0400, 0x04ff);
const cyrillicSupplement = RangeCharMatcher(0x0500, 0x052f);
const armenian = RangeCharMatcher(0x0530, 0x058f);
const hebrew = RangeCharMatcher(0x0590, 0x05ff);
const arabic = RangeCharMatcher(0x0600, 0x06ff);
const syriac = RangeCharMatcher(0x0700, 0x074f);
const arabicSupplement = RangeCharMatcher(0x0750, 0x077f);
const thaana = RangeCharMatcher(0x0780, 0x07bf);
const nko = RangeCharMatcher(0x07c0, 0x07ff);
const samaritan = RangeCharMatcher(0x0800, 0x083f);
const mandaic = RangeCharMatcher(0x0840, 0x085f);
const syriacSupplement = RangeCharMatcher(0x0860, 0x086f);
const arabicExtendedB = RangeCharMatcher(0x0870, 0x089f);
const arabicExtendedA = RangeCharMatcher(0x08a0, 0x08ff);
const devanagari = RangeCharMatcher(0x0900, 0x097f);
const bengali = RangeCharMatcher(0x0980, 0x09ff);
const gurmukhi = RangeCharMatcher(0x0a00, 0x0a7f);
const gujarati = RangeCharMatcher(0x0a80, 0x0aff);
const oriya = RangeCharMatcher(0x0b00, 0x0b7f);
const tamil = RangeCharMatcher(0x0b80, 0x0bff);
const telugu = RangeCharMatcher(0x0c00, 0x0c7f);
const kannada = RangeCharMatcher(0x0c80, 0x0cff);
const malayalam = RangeCharMatcher(0x0d00, 0x0d7f);
const sinhala = RangeCharMatcher(0x0d80, 0x0dff);
const thai = RangeCharMatcher(0x0e00, 0x0e7f);
const lao = RangeCharMatcher(0x0e80, 0x0eff);
const tibetan = RangeCharMatcher(0x0f00, 0x0fff);
const myanmar = RangeCharMatcher(0x1000, 0x109f);
const georgian = RangeCharMatcher(0x10a0, 0x10ff);
const hangulJamo = RangeCharMatcher(0x1100, 0x11ff);
const ethiopic = RangeCharMatcher(0x1200, 0x137f);
const ethiopicSupplement = RangeCharMatcher(0x1380, 0x139f);
const cherokee = RangeCharMatcher(0x13a0, 0x13ff);
const unifiedCanadianAboriginalSyllabics = RangeCharMatcher(0x1400, 0x167f);
const ogham = RangeCharMatcher(0x1680, 0x169f);
const runic = RangeCharMatcher(0x16a0, 0x16ff);
const tagalog = RangeCharMatcher(0x1700, 0x171f);
const hanunoo = RangeCharMatcher(0x1720, 0x173f);
const buhid = RangeCharMatcher(0x1740, 0x175f);
const tagbanwa = RangeCharMatcher(0x1760, 0x177f);
const khmer = RangeCharMatcher(0x1780, 0x17ff);
const mongolian = RangeCharMatcher(0x1800, 0x18af);
const unifiedCanadianAboriginalSyllabicsExtended = RangeCharMatcher(
  0x18b0,
  0x18ff,
);
const limbu = RangeCharMatcher(0x1900, 0x194f);
const taiLe = RangeCharMatcher(0x1950, 0x197f);
const newTaiLue = RangeCharMatcher(0x1980, 0x19df);
const khmerSymbols = RangeCharMatcher(0x19e0, 0x19ff);
const buginese = RangeCharMatcher(0x1a00, 0x1a1f);
const taiTham = RangeCharMatcher(0x1a20, 0x1aaf);
const combiningDiacriticalMarksExtended = RangeCharMatcher(0x1ab0, 0x1aff);
const balinese = RangeCharMatcher(0x1b00, 0x1b7f);
const sundanese = RangeCharMatcher(0x1b80, 0x1bbf);
const batak = RangeCharMatcher(0x1bc0, 0x1bff);
const lepcha = RangeCharMatcher(0x1c00, 0x1c4f);
const olChiki = RangeCharMatcher(0x1c50, 0x1c7f);
const cyrillicExtendedC = RangeCharMatcher(0x1c80, 0x1c8f);
const georgianExtended = RangeCharMatcher(0x1c90, 0x1cbf);
const sundaneseSupplement = RangeCharMatcher(0x1cc0, 0x1ccf);
const vedicExtensions = RangeCharMatcher(0x1cd0, 0x1cff);
const phoneticExtensions = RangeCharMatcher(0x1d00, 0x1d7f);
const phoneticExtensionsSupplement = RangeCharMatcher(0x1d80, 0x1dbf);
const combiningDiacriticalMarksSupplement = RangeCharMatcher(0x1dc0, 0x1dff);
const latinExtendedAdditional = RangeCharMatcher(0x1e00, 0x1eff);
const greekExtended = RangeCharMatcher(0x1f00, 0x1fff);
const generalPunctuation = RangeCharMatcher(0x2000, 0x206f);
const superscriptsAndSubscripts = RangeCharMatcher(0x2070, 0x209f);
const currencySymbols = RangeCharMatcher(0x20a0, 0x20cf);
const combiningDiacriticalMarksForSymbols = RangeCharMatcher(0x20d0, 0x20ff);
const letterlikeSymbols = RangeCharMatcher(0x2100, 0x214f);
const numberForms = RangeCharMatcher(0x2150, 0x218f);
const arrows = RangeCharMatcher(0x2190, 0x21ff);
const mathematicalOperators = RangeCharMatcher(0x2200, 0x22ff);
const miscellaneousTechnical = RangeCharMatcher(0x2300, 0x23ff);
const controlPictures = RangeCharMatcher(0x2400, 0x243f);
const opticalCharacterRecognition = RangeCharMatcher(0x2440, 0x245f);
const enclosedAlphanumerics = RangeCharMatcher(0x2460, 0x24ff);
const boxDrawing = RangeCharMatcher(0x2500, 0x257f);
const blockElements = RangeCharMatcher(0x2580, 0x259f);
const geometricShapes = RangeCharMatcher(0x25a0, 0x25ff);
const miscellaneousSymbols = RangeCharMatcher(0x2600, 0x26ff);
const dingbats = RangeCharMatcher(0x2700, 0x27bf);
const miscellaneousMathematicalSymbolsA = RangeCharMatcher(0x27c0, 0x27ef);
const supplementalArrowsA = RangeCharMatcher(0x27f0, 0x27ff);
const braillePatterns = RangeCharMatcher(0x2800, 0x28ff);
const supplementalArrowsB = RangeCharMatcher(0x2900, 0x297f);
const miscellaneousMathematicalSymbolsB = RangeCharMatcher(0x2980, 0x29ff);
const supplementalMathematicalOperators = RangeCharMatcher(0x2a00, 0x2aff);
const miscellaneousSymbolsAndArrows = RangeCharMatcher(0x2b00, 0x2bff);
const glagolitic = RangeCharMatcher(0x2c00, 0x2c5f);
const latinExtendedC = RangeCharMatcher(0x2c60, 0x2c7f);
const coptic = RangeCharMatcher(0x2c80, 0x2cff);
const georgianSupplement = RangeCharMatcher(0x2d00, 0x2d2f);
const tifinagh = RangeCharMatcher(0x2d30, 0x2d7f);
const ethiopicExtended = RangeCharMatcher(0x2d80, 0x2ddf);
const cyrillicExtendedA = RangeCharMatcher(0x2de0, 0x2dff);
const supplementalPunctuation = RangeCharMatcher(0x2e00, 0x2e7f);
const cjkRadicalsSupplement = RangeCharMatcher(0x2e80, 0x2eff);
const kangxiRadicals = RangeCharMatcher(0x2f00, 0x2fdf);
const ideographicDescriptionCharacters = RangeCharMatcher(0x2ff0, 0x2fff);
const cjkSymbolsAndPunctuation = RangeCharMatcher(0x3000, 0x303f);
const hiragana = RangeCharMatcher(0x3040, 0x309f);
const katakana = RangeCharMatcher(0x30a0, 0x30ff);
const bopomofo = RangeCharMatcher(0x3100, 0x312f);
const hangulCompatibilityJamo = RangeCharMatcher(0x3130, 0x318f);
const kanbun = RangeCharMatcher(0x3190, 0x319f);
const bopomofoExtended = RangeCharMatcher(0x31a0, 0x31bf);
const cjkStrokes = RangeCharMatcher(0x31c0, 0x31ef);
const katakanaPhoneticExtensions = RangeCharMatcher(0x31f0, 0x31ff);
const enclosedCjkLettersAndMonths = RangeCharMatcher(0x3200, 0x32ff);
const cjkCompatibility = RangeCharMatcher(0x3300, 0x33ff);
const cjkUnifiedIdeographsExtensionA = RangeCharMatcher(0x3400, 0x4dbf);
const yijingHexagramSymbols = RangeCharMatcher(0x4dc0, 0x4dff);
const cjkUnifiedIdeographs = RangeCharMatcher(0x4e00, 0x9fff);
const yiSyllables = RangeCharMatcher(0xa000, 0xa48f);
const yiRadicals = RangeCharMatcher(0xa490, 0xa4cf);
const lisu = RangeCharMatcher(0xa4d0, 0xa4ff);
const vai = RangeCharMatcher(0xa500, 0xa63f);
const cyrillicExtendedB = RangeCharMatcher(0xa640, 0xa69f);
const bamum = RangeCharMatcher(0xa6a0, 0xa6ff);
const modifierToneLetters = RangeCharMatcher(0xa700, 0xa71f);
const latinExtendedD = RangeCharMatcher(0xa720, 0xa7ff);
const sylotiNagri = RangeCharMatcher(0xa800, 0xa82f);
const commonIndicNumberForms = RangeCharMatcher(0xa830, 0xa83f);
const phagsPa = RangeCharMatcher(0xa840, 0xa87f);
const saurashtra = RangeCharMatcher(0xa880, 0xa8df);
const devanagariExtended = RangeCharMatcher(0xa8e0, 0xa8ff);
const kayahLi = RangeCharMatcher(0xa900, 0xa92f);
const rejang = RangeCharMatcher(0xa930, 0xa95f);
const hangulJamoExtendedA = RangeCharMatcher(0xa960, 0xa97f);
const javanese = RangeCharMatcher(0xa980, 0xa9df);
const myanmarExtendedB = RangeCharMatcher(0xa9e0, 0xa9ff);
const cham = RangeCharMatcher(0xaa00, 0xaa5f);
const myanmarExtendedA = RangeCharMatcher(0xaa60, 0xaa7f);
const taiViet = RangeCharMatcher(0xaa80, 0xaadf);
const meeteiMayekExtensions = RangeCharMatcher(0xaae0, 0xaaff);
const ethiopicExtendedA = RangeCharMatcher(0xab00, 0xab2f);
const latinExtendedE = RangeCharMatcher(0xab30, 0xab6f);
const cherokeeSupplement = RangeCharMatcher(0xab70, 0xabbf);
const meeteiMayek = RangeCharMatcher(0xabc0, 0xabff);
const hangulSyllables = RangeCharMatcher(0xac00, 0xd7af);
const hangulJamoExtendedB = RangeCharMatcher(0xd7b0, 0xd7ff);
const highSurrogates = RangeCharMatcher(0xd800, 0xdb7f);
const highPrivateUseSurrogates = RangeCharMatcher(0xdb80, 0xdbff);
const lowSurrogates = RangeCharMatcher(0xdc00, 0xdfff);
const privateUseArea = RangeCharMatcher(0xe000, 0xf8ff);
const cjkCompatibilityIdeographs = RangeCharMatcher(0xf900, 0xfaff);
const alphabeticPresentationForms = RangeCharMatcher(0xfb00, 0xfb4f);
const arabicPresentationFormsA = RangeCharMatcher(0xfb50, 0xfdff);
const variationSelectors = RangeCharMatcher(0xfe00, 0xfe0f);
const verticalForms = RangeCharMatcher(0xfe10, 0xfe1f);
const combiningHalfMarks = RangeCharMatcher(0xfe20, 0xfe2f);
const cjkCompatibilityForms = RangeCharMatcher(0xfe30, 0xfe4f);
const smallFormVariants = RangeCharMatcher(0xfe50, 0xfe6f);
const arabicPresentationFormsB = RangeCharMatcher(0xfe70, 0xfeff);
const halfwidthAndFullwidthForms = RangeCharMatcher(0xff00, 0xffef);
const specials = RangeCharMatcher(0xfff0, 0xffff);
const linearBSyllabary = RangeCharMatcher(0x10000, 0x1007f);
const linearBIdeograms = RangeCharMatcher(0x10080, 0x100ff);
const aegeanNumbers = RangeCharMatcher(0x10100, 0x1013f);
const ancientGreekNumbers = RangeCharMatcher(0x10140, 0x1018f);
const ancientSymbols = RangeCharMatcher(0x10190, 0x101cf);
const phaistosDisc = RangeCharMatcher(0x101d0, 0x101ff);
const lycian = RangeCharMatcher(0x10280, 0x1029f);
const carian = RangeCharMatcher(0x102a0, 0x102df);
const copticEpactNumbers = RangeCharMatcher(0x102e0, 0x102ff);
const oldItalic = RangeCharMatcher(0x10300, 0x1032f);
const gothic = RangeCharMatcher(0x10330, 0x1034f);
const oldPermic = RangeCharMatcher(0x10350, 0x1037f);
const ugaritic = RangeCharMatcher(0x10380, 0x1039f);
const oldPersian = RangeCharMatcher(0x103a0, 0x103df);
const deseret = RangeCharMatcher(0x10400, 0x1044f);
const shavian = RangeCharMatcher(0x10450, 0x1047f);
const osmanya = RangeCharMatcher(0x10480, 0x104af);
const osage = RangeCharMatcher(0x104b0, 0x104ff);
const elbasan = RangeCharMatcher(0x10500, 0x1052f);
const caucasianAlbanian = RangeCharMatcher(0x10530, 0x1056f);
const vithkuqi = RangeCharMatcher(0x10570, 0x105bf);
const todhri = RangeCharMatcher(0x105c0, 0x105ff);
const linearA = RangeCharMatcher(0x10600, 0x1077f);
const latinExtendedF = RangeCharMatcher(0x10780, 0x107bf);
const cypriotSyllabary = RangeCharMatcher(0x10800, 0x1083f);
const imperialAramaic = RangeCharMatcher(0x10840, 0x1085f);
const palmyrene = RangeCharMatcher(0x10860, 0x1087f);
const nabataean = RangeCharMatcher(0x10880, 0x108af);
const hatran = RangeCharMatcher(0x108e0, 0x108ff);
const phoenician = RangeCharMatcher(0x10900, 0x1091f);
const lydian = RangeCharMatcher(0x10920, 0x1093f);
const sidetic = RangeCharMatcher(0x10940, 0x1095f);
const meroiticHieroglyphs = RangeCharMatcher(0x10980, 0x1099f);
const meroiticCursive = RangeCharMatcher(0x109a0, 0x109ff);
const kharoshthi = RangeCharMatcher(0x10a00, 0x10a5f);
const oldSouthArabian = RangeCharMatcher(0x10a60, 0x10a7f);
const oldNorthArabian = RangeCharMatcher(0x10a80, 0x10a9f);
const manichaean = RangeCharMatcher(0x10ac0, 0x10aff);
const avestan = RangeCharMatcher(0x10b00, 0x10b3f);
const inscriptionalParthian = RangeCharMatcher(0x10b40, 0x10b5f);
const inscriptionalPahlavi = RangeCharMatcher(0x10b60, 0x10b7f);
const psalterPahlavi = RangeCharMatcher(0x10b80, 0x10baf);
const oldTurkic = RangeCharMatcher(0x10c00, 0x10c4f);
const oldHungarian = RangeCharMatcher(0x10c80, 0x10cff);
const hanifiRohingya = RangeCharMatcher(0x10d00, 0x10d3f);
const garay = RangeCharMatcher(0x10d40, 0x10d8f);
const rumiNumeralSymbols = RangeCharMatcher(0x10e60, 0x10e7f);
const yezidi = RangeCharMatcher(0x10e80, 0x10ebf);
const arabicExtendedC = RangeCharMatcher(0x10ec0, 0x10eff);
const oldSogdian = RangeCharMatcher(0x10f00, 0x10f2f);
const sogdian = RangeCharMatcher(0x10f30, 0x10f6f);
const oldUyghur = RangeCharMatcher(0x10f70, 0x10faf);
const chorasmian = RangeCharMatcher(0x10fb0, 0x10fdf);
const elymaic = RangeCharMatcher(0x10fe0, 0x10fff);
const brahmi = RangeCharMatcher(0x11000, 0x1107f);
const kaithi = RangeCharMatcher(0x11080, 0x110cf);
const soraSompeng = RangeCharMatcher(0x110d0, 0x110ff);
const chakma = RangeCharMatcher(0x11100, 0x1114f);
const mahajani = RangeCharMatcher(0x11150, 0x1117f);
const sharada = RangeCharMatcher(0x11180, 0x111df);
const sinhalaArchaicNumbers = RangeCharMatcher(0x111e0, 0x111ff);
const khojki = RangeCharMatcher(0x11200, 0x1124f);
const multani = RangeCharMatcher(0x11280, 0x112af);
const khudawadi = RangeCharMatcher(0x112b0, 0x112ff);
const grantha = RangeCharMatcher(0x11300, 0x1137f);
const tuluTigalari = RangeCharMatcher(0x11380, 0x113ff);
const newa = RangeCharMatcher(0x11400, 0x1147f);
const tirhuta = RangeCharMatcher(0x11480, 0x114df);
const siddham = RangeCharMatcher(0x11580, 0x115ff);
const modi = RangeCharMatcher(0x11600, 0x1165f);
const mongolianSupplement = RangeCharMatcher(0x11660, 0x1167f);
const takri = RangeCharMatcher(0x11680, 0x116cf);
const myanmarExtendedC = RangeCharMatcher(0x116d0, 0x116ff);
const ahom = RangeCharMatcher(0x11700, 0x1174f);
const dogra = RangeCharMatcher(0x11800, 0x1184f);
const warangCiti = RangeCharMatcher(0x118a0, 0x118ff);
const divesAkuru = RangeCharMatcher(0x11900, 0x1195f);
const nandinagari = RangeCharMatcher(0x119a0, 0x119ff);
const zanabazarSquare = RangeCharMatcher(0x11a00, 0x11a4f);
const soyombo = RangeCharMatcher(0x11a50, 0x11aaf);
const unifiedCanadianAboriginalSyllabicsExtendedA = RangeCharMatcher(
  0x11ab0,
  0x11abf,
);
const pauCinHau = RangeCharMatcher(0x11ac0, 0x11aff);
const devanagariExtendedA = RangeCharMatcher(0x11b00, 0x11b5f);
const sharadaSupplement = RangeCharMatcher(0x11b60, 0x11b7f);
const sunuwar = RangeCharMatcher(0x11bc0, 0x11bff);
const bhaiksuki = RangeCharMatcher(0x11c00, 0x11c6f);
const marchen = RangeCharMatcher(0x11c70, 0x11cbf);
const masaramGondi = RangeCharMatcher(0x11d00, 0x11d5f);
const gunjalaGondi = RangeCharMatcher(0x11d60, 0x11daf);
const tolongSiki = RangeCharMatcher(0x11db0, 0x11def);
const makasar = RangeCharMatcher(0x11ee0, 0x11eff);
const kawi = RangeCharMatcher(0x11f00, 0x11f5f);
const lisuSupplement = RangeCharMatcher(0x11fb0, 0x11fbf);
const tamilSupplement = RangeCharMatcher(0x11fc0, 0x11fff);
const cuneiform = RangeCharMatcher(0x12000, 0x123ff);
const cuneiformNumbersAndPunctuation = RangeCharMatcher(0x12400, 0x1247f);
const earlyDynasticCuneiform = RangeCharMatcher(0x12480, 0x1254f);
const cyproMinoan = RangeCharMatcher(0x12f90, 0x12fff);
const egyptianHieroglyphs = RangeCharMatcher(0x13000, 0x1342f);
const egyptianHieroglyphFormatControls = RangeCharMatcher(0x13430, 0x1345f);
const egyptianHieroglyphsExtendedA = RangeCharMatcher(0x13460, 0x143ff);
const anatolianHieroglyphs = RangeCharMatcher(0x14400, 0x1467f);
const gurungKhema = RangeCharMatcher(0x16100, 0x1613f);
const bamumSupplement = RangeCharMatcher(0x16800, 0x16a3f);
const mro = RangeCharMatcher(0x16a40, 0x16a6f);
const tangsa = RangeCharMatcher(0x16a70, 0x16acf);
const bassaVah = RangeCharMatcher(0x16ad0, 0x16aff);
const pahawhHmong = RangeCharMatcher(0x16b00, 0x16b8f);
const kiratRai = RangeCharMatcher(0x16d40, 0x16d7f);
const medefaidrin = RangeCharMatcher(0x16e40, 0x16e9f);
const beriaErfe = RangeCharMatcher(0x16ea0, 0x16edf);
const miao = RangeCharMatcher(0x16f00, 0x16f9f);
const ideographicSymbolsAndPunctuation = RangeCharMatcher(0x16fe0, 0x16fff);
const tangut = RangeCharMatcher(0x17000, 0x187ff);
const tangutComponents = RangeCharMatcher(0x18800, 0x18aff);
const khitanSmallScript = RangeCharMatcher(0x18b00, 0x18cff);
const tangutSupplement = RangeCharMatcher(0x18d00, 0x18d7f);
const tangutComponentsSupplement = RangeCharMatcher(0x18d80, 0x18dff);
const kanaExtendedB = RangeCharMatcher(0x1aff0, 0x1afff);
const kanaSupplement = RangeCharMatcher(0x1b000, 0x1b0ff);
const kanaExtendedA = RangeCharMatcher(0x1b100, 0x1b12f);
const smallKanaExtension = RangeCharMatcher(0x1b130, 0x1b16f);
const nushu = RangeCharMatcher(0x1b170, 0x1b2ff);
const duployan = RangeCharMatcher(0x1bc00, 0x1bc9f);
const shorthandFormatControls = RangeCharMatcher(0x1bca0, 0x1bcaf);
const symbolsForLegacyComputingSupplement = RangeCharMatcher(0x1cc00, 0x1cebf);
const miscellaneousSymbolsSupplement = RangeCharMatcher(0x1cec0, 0x1ceff);
const znamennyMusicalNotation = RangeCharMatcher(0x1cf00, 0x1cfcf);
const byzantineMusicalSymbols = RangeCharMatcher(0x1d000, 0x1d0ff);
const musicalSymbols = RangeCharMatcher(0x1d100, 0x1d1ff);
const ancientGreekMusicalNotation = RangeCharMatcher(0x1d200, 0x1d24f);
const kaktovikNumerals = RangeCharMatcher(0x1d2c0, 0x1d2df);
const mayanNumerals = RangeCharMatcher(0x1d2e0, 0x1d2ff);
const taiXuanJingSymbols = RangeCharMatcher(0x1d300, 0x1d35f);
const countingRodNumerals = RangeCharMatcher(0x1d360, 0x1d37f);
const mathematicalAlphanumericSymbols = RangeCharMatcher(0x1d400, 0x1d7ff);
const suttonSignwriting = RangeCharMatcher(0x1d800, 0x1daaf);
const latinExtendedG = RangeCharMatcher(0x1df00, 0x1dfff);
const glagoliticSupplement = RangeCharMatcher(0x1e000, 0x1e02f);
const cyrillicExtendedD = RangeCharMatcher(0x1e030, 0x1e08f);
const nyiakengPuachueHmong = RangeCharMatcher(0x1e100, 0x1e14f);
const toto = RangeCharMatcher(0x1e290, 0x1e2bf);
const wancho = RangeCharMatcher(0x1e2c0, 0x1e2ff);
const nagMundari = RangeCharMatcher(0x1e4d0, 0x1e4ff);
const olOnal = RangeCharMatcher(0x1e5d0, 0x1e5ff);
const taiYo = RangeCharMatcher(0x1e6c0, 0x1e6ff);
const ethiopicExtendedB = RangeCharMatcher(0x1e7e0, 0x1e7ff);
const mendeKikakui = RangeCharMatcher(0x1e800, 0x1e8df);
const adlam = RangeCharMatcher(0x1e900, 0x1e95f);
const indicSiyaqNumbers = RangeCharMatcher(0x1ec70, 0x1ecbf);
const ottomanSiyaqNumbers = RangeCharMatcher(0x1ed00, 0x1ed4f);
const arabicMathematicalAlphabeticSymbols = RangeCharMatcher(0x1ee00, 0x1eeff);
const mahjongTiles = RangeCharMatcher(0x1f000, 0x1f02f);
const dominoTiles = RangeCharMatcher(0x1f030, 0x1f09f);
const playingCards = RangeCharMatcher(0x1f0a0, 0x1f0ff);
const enclosedAlphanumericSupplement = RangeCharMatcher(0x1f100, 0x1f1ff);
const enclosedIdeographicSupplement = RangeCharMatcher(0x1f200, 0x1f2ff);
const miscellaneousSymbolsAndPictographs = RangeCharMatcher(0x1f300, 0x1f5ff);
const emoticons = RangeCharMatcher(0x1f600, 0x1f64f);
const ornamentalDingbats = RangeCharMatcher(0x1f650, 0x1f67f);
const transportAndMapSymbols = RangeCharMatcher(0x1f680, 0x1f6ff);
const alchemicalSymbols = RangeCharMatcher(0x1f700, 0x1f77f);
const geometricShapesExtended = RangeCharMatcher(0x1f780, 0x1f7ff);
const supplementalArrowsC = RangeCharMatcher(0x1f800, 0x1f8ff);
const supplementalSymbolsAndPictographs = RangeCharMatcher(0x1f900, 0x1f9ff);
const chessSymbols = RangeCharMatcher(0x1fa00, 0x1fa6f);
const symbolsAndPictographsExtendedA = RangeCharMatcher(0x1fa70, 0x1faff);
const symbolsForLegacyComputing = RangeCharMatcher(0x1fb00, 0x1fbff);
const cjkUnifiedIdeographsExtensionB = RangeCharMatcher(0x20000, 0x2a6df);
const cjkUnifiedIdeographsExtensionC = RangeCharMatcher(0x2a700, 0x2b73f);
const cjkUnifiedIdeographsExtensionD = RangeCharMatcher(0x2b740, 0x2b81f);
const cjkUnifiedIdeographsExtensionE = RangeCharMatcher(0x2b820, 0x2ceaf);
const cjkUnifiedIdeographsExtensionF = RangeCharMatcher(0x2ceb0, 0x2ebef);
const cjkUnifiedIdeographsExtensionI = RangeCharMatcher(0x2ebf0, 0x2ee5f);
const cjkCompatibilityIdeographsSupplement = RangeCharMatcher(0x2f800, 0x2fa1f);
const cjkUnifiedIdeographsExtensionG = RangeCharMatcher(0x30000, 0x3134f);
const cjkUnifiedIdeographsExtensionH = RangeCharMatcher(0x31350, 0x323af);
const cjkUnifiedIdeographsExtensionJ = RangeCharMatcher(0x323b0, 0x3347f);
const tags = RangeCharMatcher(0xe0000, 0xe007f);
const variationSelectorsSupplement = RangeCharMatcher(0xe0100, 0xe01ef);
const supplementaryPrivateUseAreaA = RangeCharMatcher(0xf0000, 0xfffff);
const supplementaryPrivateUseAreaB = RangeCharMatcher(0x100000, 0x10ffff);
